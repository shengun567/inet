[General]
fingerprintcalculator-class = "inet::NetworkCommunicationFingerprintCalculator"

[Config NIDBase]
**.fcsMode = "computed"
**.crcMode = "computed"

[Config WirelessNID]
extends = Wireless, NIDBase
#sim-time-limit = 5s
#fingerprint = c42d-c415/NID

[Config WirelessNIDDim]
extends = WirelessDim, NIDBase

[Config WiredNID]
extends = Wired, NIDBase

[Config MixedNID]
extends = Mixed, NIDBase

[Config Wireless]
network = FingerprintShowcaseWireless

# traffic
*.host1.numApps = 2
*.host1.app[0].typename = "UdpBasicApp"
*.host1.app[0].destAddresses = "host2"

*.host1.app[0].destPort = 1000
*.host1.app[0].messageLength = 1200B
*.host1.app[0].sendInterval = 0.12ms
*.host1.app[0].sendInterval = 0.12s
*.host1.app[0].startTime = exponential(0.1ms)
#*.host1.app[0].stopTime = 0.2s
*.host1.app[0].packetName = "small"

#*.host1.app[1].typename = "TcpSessionApp"
#*.host1.app[1].connectAddress = "10.0.0.2"
#*.host1.app[1].connectPort = 2000
#*.host1.app[1].localAddress = "10.0.0.1"
#*.host1.app[1].localPort = -1
#*.host1.app[1].tOpen = 0s
#*.host1.app[1].tSend = 0.1ms
#*.host1.app[1].dataTransferMode = "bytestream"

*.host2.numApps = 2
*.host2.app[0].typename = "UdpSink"
*.host2.app[0].localPort = 1000

# tcp session app bug ?
*.host1.app[1].typename = "TcpSessionApp"
#*.host1.app[1].localAddress = "10.0.0.1"
#*.host1.app[1].active = true
*.host1.app[1].connectAddress = "10.0.0.2"
*.host1.app[1].connectPort = 2000
*.host1.app[1].tOpen = 0s
*.host1.app[1].tSend = 0.1ms

*.host2.app[1].typename = "TcpSinkApp"
*.host2.app[1].localAddress = "10.0.0.2"
*.host2.app[1].localPort = 2000

## QoS
#*.host*.wlan[*].mac.qosStation = true
#*.host*.wlan[*].classifier.typename = "QosClassifier"
#*.host*.wlan[*].classifier.udpPortUpMap = "1000 VO 2000 VO"

## turn off fragmentation
#*.host1.wlan[*].mac.mtu = 15000B
#*.host1.wlan[*].mac.hcf.originatorMacDataService.fragmentationPolicy.fragmentationThreshold = 15000B

## turn on block ack
#*.host*.wlan[*].mac.hcf.isBlockAckSupported = true

## thresholds
#**.hcf.originatorMacDataService.msduAggregationPolicy.maxAMsduSize = 3000
#**.hcf.rtsPolicy.rtsThreshold = 3475B
#**.hcf.originatorAckPolicy.maxBlockAckPolicyFrameLength = 3400B

# visualizer
**.infoVisualizer.displayInfos = true
**.infoVisualizer.format = "%t"
**.dataLinkVisualizer.displayLinks = true
**.physicalLinkVisualizer.displayLinks = true

# phy and arp
**.wlan[*].opMode = "n(mixed-2.4Ghz)"
**.arp.typename = "GlobalArp"

[Config WirelessDim]
extends = Wireless

*.host*.wlan[*].radio.typename = "Ieee80211DimensionalRadio"
*.radioMedium.typename = "Ieee80211DimensionalRadioMedium"

**.mediumVisualizer.displaySpectrums = true

**.backgroundNoise.power = nan
**.backgroundNoise.powerSpectralDensity = -110dBmWpMHz

[Config Mixed]
network = FingerprintShowcaseMixed

# traffic settings
*.host1.numApps = 1
*.host1.app[0].typename = "UdpBasicApp"
*.host1.app[*].destAddresses = "host2"
*.host1.app[*].destPort = 1000
*.host1.app[*].localPort = 1000
*.host1.app[*].messageLength = 1000Byte
*.host1.app[*].sendInterval = 2ms

*.host2.numApps = 1
*.host2.app[0].typename = "UdpSink"
*.host2.app[*].localPort = 1000

*.ethHost1.numApps = 2
*.ethHost1.app[0].typename = "TcpSessionApp"
*.ethHost1.app[0].dataTransferMode = "bytestream"
*.ethHost1.app[0].connectAddress = "ethHost2"
*.ethHost1.app[0].tOpen = 10ms
*.ethHost1.app[0].tSend = 10ms
*.ethHost1.app[1].typename = "PingApp"
*.ethHost1.app[1].destAddr = "ethHost2"
*.ethHost1.app[1].startTime = 0s
*.ethHost1.app[1].sendInterval = 5ms

*.ethHost2.numApps = 1
*.ethHost2.app[0].typename = "TcpSinkApp"

# misc settings
**.crcMode = "computed"
**.fcsMode = "computed"
*.host*.wlan[*].bitrate = 54Mbps

# pcap recorder settings
*.host1.numPcapRecorders = 1
*.host1.pcapRecorder[*].pcapLinkType = 105		# 802.11
*.host1.pcapRecorder[*].pcapFile = "results/host1.pcap"

*.host2.numPcapRecorders = 1
*.host2.pcapRecorder[*].pcapLinkType = 105		# 802.11
*.host2.pcapRecorder[*].pcapFile = "results/host2.arp.pcap"
*.host2.pcapRecorder[*].packetDataFilter = "*ArpPacket"

*.ethHost1.numPcapRecorders = 1
*.ethHost1.pcapRecorder[*].pcapLinkType = 1		# ethernet
*.ethHost1.pcapRecorder[*].pcapFile = "results/ethHost1.pcap"

*.router1.numPcapRecorders = 2
*.router1.pcapRecorder[0].pcapLinkType = 204		# ppp
*.router1.pcapRecorder[0].moduleNamePatterns = "ppp[*]"
*.router1.pcapRecorder[0].pcapFile = "results/router1.ppp.pcap"
*.router1.pcapRecorder[1].pcapLinkType = 1		# ethernet
*.router1.pcapRecorder[1].pcapFile = "results/router1.eth.pcap"
*.router1.pcapRecorder[1].moduleNamePatterns = "eth[*]"

*.router2.numPcapRecorders = 1
*.router2.pcapRecorder[*].pcapLinkType = 1		# ethernet
*.router2.pcapRecorder[*].moduleNamePatterns = "eth[*]"
*.router2.pcapRecorder[*].pcapFile = "results/router2.tcpdata.pcap"
*.router2.pcapRecorder[*].packetDataFilter = "*Ipv4Header and totalLengthField=~576*"

*.ethHost2.numPcapRecorders = 1
*.ethHost2.pcapRecorder[*].pcapLinkType = 101	# raw IP
*.ethHost2.pcapRecorder[*].pcapFile = "results/ethHost2.ip.pcap"
*.ethHost2.pcapRecorder[*].moduleNamePatterns = "ipv4"
*.ethHost2.pcapRecorder[*].dumpProtocols = "ipv4"

**.pcapRecorder[*].verbose = true	# is this needed? doesnt seem to work ok
**.pcapRecorder[*].alwaysFlush = true

# visualizer settings
*.visualizer.*.numDataLinkVisualizers = 2
*.visualizer.*.numInterfaceTableVisualizers = 2
*.visualizer.*.dataLinkVisualizer[0].displayLinks = true
*.visualizer.*.dataLinkVisualizer[0].packetFilter = "not *ping*"
*.visualizer.*.physicalLinkVisualizer[*].displayLinks = true
*.visualizer.*.interfaceTableVisualizer[0].displayInterfaceTables = true
*.visualizer.*.interfaceTableVisualizer[0].format = "%N"
*.visualizer.*.interfaceTableVisualizer[1].displayInterfaceTables = true
*.visualizer.*.interfaceTableVisualizer[1].format = "%a"
*.visualizer.*.interfaceTableVisualizer[1].displayWiredInterfacesAtConnections = false
*.visualizer.*.transportConnectionVisualizer[*].displayTransportConnections = true
*.visualizer.*.dataLinkVisualizer[1].displayLinks = true
*.visualizer.*.dataLinkVisualizer[1].packetFilter = "*ping*"
*.visualizer.*.dataLinkVisualizer[1].lineColor = "red"
*.visualizer.*.infoVisualizer[*].modules = "*.*.pcapRecorder[*]"
*.visualizer.*.infoVisualizer[*].format = "%t"

[Config Wired]
network = FingerprintShowcaseWired

**.arp.typename = "GlobalArp"

# app settings
*.server.numApps = 3
*.server.app[0].typename = "UdpVideoStreamServer"
*.server.app[0].localPort = 1001
*.server.app[0].packetLen = 1000Byte
*.server.app[0].videoSize = 1MiB
*.server.app[0].sendInterval = 0.1ms

*.server.app[1..2].typename = "TcpSessionApp"
*.server.app[1].connectAddress = "10.0.0.27"
*.server.app[1].connectPort = 1000
*.server.app[2].connectAddress = "10.0.0.20"
*.server.app[2].connectPort = 1001
*.server.app[1..2].localAddress = "10.0.0.10"
*.server.app[1].localPort = 1000
*.server.app[2].localPort = 1001
*.server.app[1..2].tOpen = 0s
*.server.app[1..2].tSend = 0s
*.server.app[1..2].active = true
*.server.app[1..2].sendBytes = 1MiB

*.host2.numApps = 1
*.host2.app[0].typename = "UdpVideoStreamClient"
*.host2.app[*].localPort = 1000
*.host2.app[*].serverAddress = "server"
*.host2.app[*].serverPort = 1001
*.host2.app[*].startTime = 0s

*.host4.numApps = 1
*.host4.app[0].typename = "UdpVideoStreamClient"
*.host4.app[*].localPort = 1000
*.host4.app[*].serverAddress = "server"
*.host4.app[*].serverPort = 1001
*.host4.app[*].startTime = 0s

*.host5.numApps = 1
*.host5.app[0].typename = "TcpSinkApp"
*.host5.app[*].localAddress = "10.0.0.27"
*.host5.app[*].localPort = 1000

*.host3.numApps = 1
*.host3.app[0].typename = "TcpSinkApp"
*.host3.app[*].localAddress = "10.0.0.20"
*.host3.app[*].localPort = 1001


# TODO: explain this
#*.visualizer2.networkNodeVisualizer.typename = ""
#*.visualizer2.*.networkNodeVisualizerModule = "visualizer1.networkNodeVisualizer"
# TODO: is this needed with multivisualizers?

# visualizer settings
#*.visualizer.numStatisticVisualizers = 2
*.visualizer.numNetworkRouteVisualizers = 2

#*.visualizer.statisticVisualizer[0].displayStatistics = true
#*.visualizer.statisticVisualizer[0].signalName = "packetSentToUpper"
#*.visualizer.statisticVisualizer[0].statisticName = "passedUpPk"
#*.visualizer.statisticVisualizer[0].statisticExpression = "count"
#*.visualizer.statisticVisualizer[0].sourceFilter = "**.udp"
#*.visualizer.statisticVisualizer[0].format = "UDP packets received: %v"

# TODO: temp keys
*.visualizer.infoVisualizer[*].displayInfos = true
*.visualizer.infoVisualizer[*].modules = "*.host2.udp or *.host4.udp"
*.visualizer.infoVisualizer[*].format = "%t"

#*.visualizer.statisticVisualizer[1].displayStatistics = true
#*.visualizer.statisticVisualizer[1].signalName = "packetReceived"
#*.visualizer.statisticVisualizer[1].statisticExpression = "sum(packetBytes)"
#*.visualizer.statisticVisualizer[1].statisticUnit = "B"
#*.visualizer.statisticVisualizer[1].unit = "KiB"
#*.visualizer.statisticVisualizer[1].sourceFilter = "*.host3.app[*].* *.host5.app[*].*"
#*.visualizer.statisticVisualizer[1].format = "TCP data received: %v %u"
#
#*.visualizer.statisticVisualizer[*].placementPriority = -1

*.visualizer.networkRouteVisualizer[0].displayRoutes = true
*.visualizer.networkRouteVisualizer[0].packetFilter = "*tcp* or *ACK* or *SYN*"
*.visualizer.networkRouteVisualizer[0].lineColor = "blue"

*.visualizer.networkRouteVisualizer[1].displayRoutes = true
*.visualizer.networkRouteVisualizer[1].packetFilter = "*Video*"
*.visualizer.networkRouteVisualizer[1].lineColor = "red"

*.visualizer.transportConnectionVisualizer[0].displayTransportConnections = true
*.visualizer.transportConnectionVisualizer[0].iconColor = "darkblue, blue"

**.crcMode = "computed"

[Config Ospf]
network = OspfNetwork

# Enable OSPF on all routers
*.R*.hasOspf = true

*.configurator.addStaticRoutes = false

# Visualizer settings
**.visualizer.interfaceTableVisualizer.displayInterfaceTables = true
#**.visualizer.interfaceTableVisualizer.nodeFilter = "not(fullPath(*.N*))"

*.R*.ospf.ospfConfig = xmldoc("ASConfig_tp_priority.xml")

*.*.hasStatus = true
*.scenarioManager.script = xml("<scenario> \
                                    <disconnect t='60' src-module='R2' dest-module='switch2' /> \
                                </scenario>")

[Config WireAndUseLess]
extends = Wireless

#*.host1.numApps = 2
#*.host1.app[1].typename = "UselessUdpApp"
